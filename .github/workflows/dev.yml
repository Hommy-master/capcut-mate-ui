name: Build Application

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  ARTIFACT_RETENTION_DAYS: 7  # 设置构件保留天数:cite[2]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']
        include:
          - os: ubuntu-latest
            artifact-name: linux-package
          - os: macos-latest
            artifact-name: macos-package
          - os: windows-latest
            artifact-name: windows-package

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # 也更新 checkout 动作版本

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        pip install uv

    - name: Install dependencies with uv
      run: |
        uv sync --all-groups --frozen

    - name: Test application
      run: |
        python main.py --help

    - name: Package application
      run: |
        # 这里是你原有的打包逻辑，例如使用 PyInstaller
        echo "Packaging for $RUNNER_OS"
        # 示例：uv run pyinstaller --onefile main.py

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4  # 更新为 v4 版本
      with:
        name: ${{ matrix.artifact-name }}-${{ github.sha }}
        path: |
          dist/
          build/
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error  # 可选：当没有找到文件时的行为，可选 warn, error, ignore:cite[2]

  # 假设你有一个部署或测试 job 需要下载上述 artifact
  deploy-or-test:
    name: "Deploy or Test"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4  # 确保 download-artifact 也更新到 v4
        with:
          pattern: '*-${{ github.sha }}'  # 示例：根据 SHA 模式匹配下载
          path: downloaded-artifacts
          merge-multiple: true  # 可选：合并多个 artifact:cite[8]

      - name: List downloaded files
        run: ls -R downloaded-artifacts

  create-release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
